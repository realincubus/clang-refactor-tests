--- /home/incubus/dev/llvm-clang-3.5/utils/lit/lit/main.py	2014-03-17 10:17:19.511753755 +0100
+++ main.py	2014-06-18 12:59:12.935575338 +0200
@@ -136,9 +136,6 @@
     from optparse import OptionParser, OptionGroup
     parser = OptionParser("usage: %prog [options] {file-or-path}")
 
-    parser.add_option("", "--version", dest="show_version",
-                      help="Show version and exit",
-                      action="store_true", default=False)
     parser.add_option("-j", "--threads", dest="numThreads", metavar="N",
                       help="Number of testing threads",
                       type=int, action="store", default=None)
@@ -227,14 +224,13 @@
     group.add_option("", "--use-threads", dest="useProcesses",
                       help="Run tests in parallel with threads (not processes)",
                       action="store_false", default=useProcessesIsDefault)
+    group.add_option("", "--junit-xml-output", dest="xmlFile",
+                      help=("Write JUnit-compatible XML test reports to the"
+                            " specified file"), default=None)
     parser.add_option_group(group)
 
     (opts, args) = parser.parse_args()
 
-    if opts.show_version:
-        print("lit %s" % (lit.__version__,))
-        return
-
     if not args:
         parser.error('No inputs specified')
 
@@ -409,6 +405,34 @@
         N = len(byCode.get(code,[]))
         if N:
             print('  %s: %d' % (name,N))
+    if opts.xmlFile:
+        # Collect the tests, indexed by test suite
+        bySuite = {}
+        for t in run.tests:
+            suite = t.suite.config.name
+            if suite not in bySuite:
+                bySuite[suite] = {
+                                   'passes'   : 0,
+                                   'failures' : 0,
+                                   'tests'    : [] }
+            bySuite[suite]['tests'].append(t)
+            if t.result.code.isFailure:
+                bySuite[suite]['failures'] += 1
+            else:
+                bySuite[suite]['passes'] += 1
+        xmlFile = open(opts.xmlFile, "w")
+        xmlFile.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n")
+        xmlFile.write("<testsuites>\n")
+        for suiteName in bySuite:
+            s = bySuite[suiteName]
+            xmlFile.write("<testsuite name='" + suiteName + "'")
+            xmlFile.write(" tests='" + str(s['passes'] + s['failures']) + "'")
+            xmlFile.write(" failures='" + str(s['failures']) + "'>\n")
+            for t in s['tests']:
+                xmlFile.write(t.getJUnitXML() + "\n")
+            xmlFile.write("</testsuite>\n")
+        xmlFile.write("</testsuites>")
+        xmlFile.close()
 
     # If we encountered any additional errors, exit abnormally.
     if litConfig.numErrors:
